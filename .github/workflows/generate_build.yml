name: Generate Build Debug/Release

on:
  workflow_dispatch:
    inputs:
      buildVariant:
        description: 'Build variant debug/release'
        required: true
        default: 'debug'

      branchName:
        description: 'Branch Name (optional)'
        required: false
        default: 'master'

jobs:
  build:
    name: Build app bundle
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
            ref: ${{github.event.inputs.branchName}}

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create keystore.properties file
        id: createKeystoreProperties
        run: echo '${{ secrets.KEY_STORE_PROPERTIES }}' > keystore.properties

      - name: Build deubg aab
        run: ./gradlew bundleDebug
        if: github.event.inputs.buildVariant == 'debug'

      - name: Build release aab
        run: ./gradlew bundleRelease
        if: github.event.inputs.buildVariant == 'release'

      - name: Sign Release
        uses: r0adkll/sign-android-release@v1
        if: github.event.inputs.buildVariant == 'release'
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Create service_account.json
        id: createServiceAccount
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json
        if: github.event.inputs.buildVariant == 'release'

      - name: Upload debug app bundle
        uses: actions/upload-artifact@v2
        if: github.event.inputs.buildVariant == 'debug'
        with:
          name: appbundle
          path: app/build/outputs/bundle/debug/*.aab


      - name: Upload release app bundle
        uses: actions/upload-artifact@v2
        if: github.event.inputs.buildVariant == 'release'
        with:
          name: appbundle
          path: app/build/outputs/bundle/release/ddfm-release.aab